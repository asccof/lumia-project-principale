#!/usr/bin/env python3
"""
Script de test pour v√©rifier le bon fonctionnement du site Tighri
"""

import requests
import time
from datetime import datetime

def test_site():
    """Teste les fonctionnalit√©s principales du site"""
    
    base_url = "http://localhost:5000"
    admin_url = "http://localhost:8080"
    
    print("üß™ TEST DU SITE TIGHRI")
    print("=" * 50)
    
    # Test 1: Site principal
    print("\n1Ô∏è‚É£ Test du site principal...")
    try:
        response = requests.get(base_url, timeout=5)
        if response.status_code == 200:
            print("‚úÖ Site principal accessible")
        else:
            print(f"‚ùå Site principal: Erreur {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Site principal inaccessible: {e}")
        return False
    
    # Test 2: Page des professionnels
    print("\n2Ô∏è‚É£ Test de la page des professionnels...")
    try:
        response = requests.get(f"{base_url}/professionals", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Page des professionnels accessible")
        else:
            print(f"‚ùå Page des professionnels: Erreur {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Page des professionnels inaccessible: {e}")
    
    # Test 3: API des professionnels
    print("\n3Ô∏è‚É£ Test de l'API des professionnels...")
    try:
        response = requests.get(f"{base_url}/api/professionals", timeout=5)
        if response.status_code == 200:
            data = response.json()
            if len(data) > 0:
                print(f"‚úÖ API des professionnels: {len(data)} professionnels trouv√©s")
            else:
                print("‚ö†Ô∏è API des professionnels: Aucun professionnel trouv√©")
        else:
            print(f"‚ùå API des professionnels: Erreur {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå API des professionnels inaccessible: {e}")
    
    # Test 4: Serveur admin
    print("\n4Ô∏è‚É£ Test du serveur admin...")
    try:
        response = requests.get(admin_url, timeout=5)
        if response.status_code == 200:
            print("‚úÖ Serveur admin accessible")
        else:
            print(f"‚ùå Serveur admin: Erreur {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Serveur admin inaccessible: {e}")
    
    # Test 5: Page de connexion admin
    print("\n5Ô∏è‚É£ Test de la page de connexion admin...")
    try:
        response = requests.get(f"{admin_url}/login", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Page de connexion admin accessible")
        else:
            print(f"‚ùå Page de connexion admin: Erreur {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Page de connexion admin inaccessible: {e}")
    
    # Test 6: V√©rification des cr√©neaux disponibles
    print("\n6Ô∏è‚É£ Test des cr√©neaux disponibles...")
    try:
        # R√©cup√©rer le premier professionnel
        response = requests.get(f"{base_url}/api/professionals", timeout=5)
        if response.status_code == 200:
            professionals = response.json()
            if professionals:
                prof_id = professionals[0]['id']
                today = datetime.now().strftime('%Y-%m-%d')
                response = requests.get(f"{base_url}/api/professional/{prof_id}/available-slots?date={today}", timeout=5)
                if response.status_code == 200:
                    data = response.json()
                    if 'available_slots' in data:
                        print(f"‚úÖ Cr√©neaux disponibles: {len(data['available_slots'])} cr√©neaux trouv√©s")
                    else:
                        print("‚ö†Ô∏è Cr√©neaux disponibles: Pas de cr√©neaux disponibles")
                else:
                    print(f"‚ùå Cr√©neaux disponibles: Erreur {response.status_code}")
            else:
                print("‚ö†Ô∏è Cr√©neaux disponibles: Aucun professionnel pour tester")
        else:
            print(f"‚ùå Cr√©neaux disponibles: Impossible de r√©cup√©rer les professionnels")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Cr√©neaux disponibles: Erreur {e}")
    
    print("\n" + "=" * 50)
    print("üéØ TESTS TERMIN√âS")
    print("\nüìã V√©rifications manuelles √† faire:")
    print("   ‚Ä¢ Ouvrir http://localhost:5000 dans ton navigateur")
    print("   ‚Ä¢ Tester la navigation entre les pages")
    print("   ‚Ä¢ V√©rifier que les professionnels s'affichent")
    print("   ‚Ä¢ Tester la r√©servation de rendez-vous")
    print("   ‚Ä¢ Ouvrir http://localhost:8080 pour l'admin")
    print("   ‚Ä¢ Se connecter avec admin / admin123")
    
    return True

if __name__ == '__main__':
    print("‚è≥ Attendre que les serveurs d√©marrent...")
    time.sleep(3)  # Attendre 3 secondes pour que les serveurs d√©marrent
    
    test_site() 